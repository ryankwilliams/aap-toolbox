- name: Validate global input
  ansible.builtin.include_tasks: validate_global_input.yml

- name: Deprovision openstack server
  when: cloud_provider == "openstack"
  block:
    - name: Include vars
      ansible.builtin.include_vars:
        file: openstack.yml

    - name: Validate openstack input
      ansible.builtin.assert:
        that:
          - server_name != ""

    - name: Collect information for server {{ server_name }}
      openstack.cloud.server_info:
        server: "{{ server_name }}"
      register: server_info

    - name: Unregister from RHSM
      community.general.redhat_subscription:
        state: absent
      become: true
      delegate_to: "cloud-user@{{ server_info.servers[0].access_ipv4 }}"

    - name: Delete openstack server {{ server_name }}
      openstack.cloud.server:
        name: "{{ server_name }}"
        state: absent

- name: Deprovision aws ec2 server
  when: cloud_provider == "aws"
  block:
    - name: Include vars
      ansible.builtin.include_vars:
        file: aws.yml

    - name: Validate aws input
      ansible.builtin.assert:
        that:
          - server_name != ""

    - name: Get aws ec2 server info
      amazon.aws.ec2_instance_info:
        region: "{{ region_name }}"
        filters:
          "tag:Name": "{{ server_name }}"
          "tag:server-name": "{{ server_name }}"
          "tag:managed-by": "atf-test-suite"
      register: ec2_instance_info

    - name: Unregister from RHSM
      community.general.redhat_subscription:
        state: absent
      become: true
      delegate_to: "ec2-user@{{ ec2_instance_info.instances[0].public_ip_address }}"

    - name: Delete aws ec2 server
      amazon.aws.ec2_instance:
        region: "{{ region_name }}"
        state: absent
        instance_ids:
          - "{{ item.instance_id }}"
      loop: "{{ ec2_instance_info.instances }}"
      when: ec2_instance_info.instances | length > 0
      loop_control:
        label: "{{ item.tags.Name }}"
